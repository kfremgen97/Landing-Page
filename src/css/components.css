/******* Button *******/

.button{
    /*set the font size to inherit
    add a 1rem vertical and 2rem horizontal padding
    add a border radius of 2rem
    remove the outline
    set all proeprties to have a transition of .2 seconds*/
    font-size: inherit;
    padding: 1rem 2rem;
    border-radius: 2rem;
    outline: none;
    transition: all .2s;
    /*set the display to flex
    set the width to max-content to avoid flexbox from stretching entire available space
    align items in the center*/
    display: flex;
    align-items: center;
    width: max-content;
}

.button > svg {
    /*set the widht and height*/
    display: inline-block;
    width: 2rem;
    height: 2rem;
    margin-left: 1rem;
}

.button--white{
    /*set the background to white
    set the text to green*/
    background-color: var(--text-light);
    color: var(--primary);
}

.button--white > svg{
    fill: var(--primary);
}

.button--green{
    /*set the background to green
    set the text to white*/
    background-color: var(--primary);
    color: var(--text-light);
}

.button--green > svg{
    fill: var(--text-light);
}

.button--animation{
     /*the shorthand animation property to specify the animation-name animation-duration and animation-timing-function and the delay
    set the animation-fill-mode to backwards.This applies the first keyframe properties to the element and retains during delay.*/
    animation: moveInBottom 2s 1s ease-in-out;
    animation-fill-mode: backwards;
}

/* Button link states */
.button--link,
.button--link:link,
.button--link:visited{
    /*remove any text decoration*/
    text-decoration: none;
}

.button--link:focus{
    /*set the outline to transparent
    set the box shadow to have a spread radius of .2rem with the primary light color*/
    outline: transparent;
    box-shadow: 0 0 0 .2rem var(--primary-light);
}

.button--link:hover{
    /*translate the button in the y directions*/
    transform: translateY(-.3rem);
}

.button--link:active{
    /*translate the button in the y directions*/
    transform: translateY(-.1rem);
}

/****** Feature *****/

.feature{
    /*
    set the feature background color and an opacity of 80%
    set the width of the feature
    give the feature a 2rem padding all around
    clip the corners of the feature to be rounded*/
    background-color: var(--text-light);
    opacity: 80%;
    width: 25rem;
    padding: 2rem;
    border-radius: 2rem;
    /*set the display to flex and center align the items along the cross axis*/ 
    display: flex;
    flex-direction: column;
    align-items: center;
}

.feature > svg{
    /*set the display to inline block so vertical padding and margin are respected
    fill the color of the svg*/
    display: inline-block;
    width: 6rem;
    height: 6rem;
    fill: var(--primary);
}


/***** Package *****/

.package{
    /*set the width 
    give a border radius of 2rem to circle out the edges
    hide the over flow,i.e the image
    give a box shaodw around the element*/
    width: 30rem;
    border-radius: 2rem;;
    overflow: hidden;
    box-shadow: 1rem 1rem 2rem var(--text-dark);
    /*set the display to flex
    set the flex direction to column
    align the items on the cross axis in the center*/
    display:flex;
    flex-direction: column;
    align-items: center;
}

.package__img{
    /*set the eight and give a width of 100%*/
    height:20rem;
    width: 100%;
}

.package__list{
    /*remove any list style
    set the display to flex
    set the flex direction to column
    align the items on the cross axis in the center*/
    list-style: none;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.package__item{
    /*add a padding vertically of 1 rem and 0 horizontally*/
    padding: 1rem 0;
}

.package__item:not(:last-child){
    /*for every package item that is not the last child ass a bottom border*/
    border-bottom: .1rem solid var(--primary);
}

/***** Story *****/